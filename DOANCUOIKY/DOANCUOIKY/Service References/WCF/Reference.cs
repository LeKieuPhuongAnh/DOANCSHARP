//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOANCUOIKY.WCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoToValidate", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class UserInfoToValidate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccount", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CreateAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HovaTenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MssvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HovaTen {
            get {
                return this.HovaTenField;
            }
            set {
                if ((object.ReferenceEquals(this.HovaTenField, value) != true)) {
                    this.HovaTenField = value;
                    this.RaisePropertyChanged("HovaTen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mssv {
            get {
                return this.MssvField;
            }
            set {
                if ((this.MssvField.Equals(value) != true)) {
                    this.MssvField = value;
                    this.RaisePropertyChanged("Mssv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUserDetails", ReplyAction="http://tempuri.org/IService1/LoginUserDetailsResponse")]
        string[] LoginUserDetails(DOANCUOIKY.WCF.UserInfoToValidate userInfoToValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddTitle", ReplyAction="http://tempuri.org/IService1/AddTitleResponse")]
        bool AddTitle(string titleNo, string titleName, int titleCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataTitle", ReplyAction="http://tempuri.org/IService1/LoadDataTitleResponse")]
        System.Data.DataTable LoadDataTitle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataTitleByParemeters", ReplyAction="http://tempuri.org/IService1/LoadDataTitleByParemetersResponse")]
        System.Data.DataTable LoadDataTitleByParemeters(string titleNo, string titleName, int titleCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTitle", ReplyAction="http://tempuri.org/IService1/UpdateTitleResponse")]
        bool UpdateTitle(string titleID, string titleNo, string titleName, int titleCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTitle", ReplyAction="http://tempuri.org/IService1/DeleteTitleResponse")]
        bool DeleteTitle(string titleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCategory", ReplyAction="http://tempuri.org/IService1/AddCategoryResponse")]
        bool AddCategory(string categoryNo, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataCategory", ReplyAction="http://tempuri.org/IService1/LoadDataCategoryResponse")]
        System.Data.DataTable LoadDataCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataCategoryByParemeters", ReplyAction="http://tempuri.org/IService1/LoadDataCategoryByParemetersResponse")]
        System.Data.DataTable LoadDataCategoryByParemeters(string categoryNo, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCategory", ReplyAction="http://tempuri.org/IService1/UpdateCategoryResponse")]
        bool UpdateCategory(string categoryID, string categoryNo, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCategory", ReplyAction="http://tempuri.org/IService1/DeleteCategoryResponse")]
        bool DeleteCategory(string categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddQuestion", ReplyAction="http://tempuri.org/IService1/AddQuestionResponse")]
        bool AddQuestion(int titleID, string questionNo, string question, string A, string B, string C, string D, string answer, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataQuestion", ReplyAction="http://tempuri.org/IService1/LoadDataQuestionResponse")]
        System.Data.DataTable LoadDataQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadDataQuestionByParemeters", ReplyAction="http://tempuri.org/IService1/LoadDataQuestionByParemetersResponse")]
        System.Data.DataTable LoadDataQuestionByParemeters(int titleID, string questionNo, string question, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateQuestion", ReplyAction="http://tempuri.org/IService1/UpdateQuestionResponse")]
        bool UpdateQuestion(int questionID, int titleID, string question, string A, string B, string C, string D, string answer, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteQuestion", ReplyAction="http://tempuri.org/IService1/DeleteQuestionResponse")]
        bool DeleteQuestion(string questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCreateAccount", ReplyAction="http://tempuri.org/IService1/InsertCreateAccountResponse")]
        string InsertCreateAccount(DOANCUOIKY.WCF.CreateAccount c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DOANCUOIKY.WCF.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DOANCUOIKY.WCF.IService1>, DOANCUOIKY.WCF.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] LoginUserDetails(DOANCUOIKY.WCF.UserInfoToValidate userInfoToValidate) {
            return base.Channel.LoginUserDetails(userInfoToValidate);
        }
        
        public bool AddTitle(string titleNo, string titleName, int titleCategory) {
            return base.Channel.AddTitle(titleNo, titleName, titleCategory);
        }
        
        public System.Data.DataTable LoadDataTitle() {
            return base.Channel.LoadDataTitle();
        }
        
        public System.Data.DataTable LoadDataTitleByParemeters(string titleNo, string titleName, int titleCategory) {
            return base.Channel.LoadDataTitleByParemeters(titleNo, titleName, titleCategory);
        }
        
        public bool UpdateTitle(string titleID, string titleNo, string titleName, int titleCategory) {
            return base.Channel.UpdateTitle(titleID, titleNo, titleName, titleCategory);
        }
        
        public bool DeleteTitle(string titleID) {
            return base.Channel.DeleteTitle(titleID);
        }
        
        public bool AddCategory(string categoryNo, string categoryName) {
            return base.Channel.AddCategory(categoryNo, categoryName);
        }
        
        public System.Data.DataTable LoadDataCategory() {
            return base.Channel.LoadDataCategory();
        }
        
        public System.Data.DataTable LoadDataCategoryByParemeters(string categoryNo, string categoryName) {
            return base.Channel.LoadDataCategoryByParemeters(categoryNo, categoryName);
        }
        
        public bool UpdateCategory(string categoryID, string categoryNo, string categoryName) {
            return base.Channel.UpdateCategory(categoryID, categoryNo, categoryName);
        }
        
        public bool DeleteCategory(string categoryID) {
            return base.Channel.DeleteCategory(categoryID);
        }
        
        public bool AddQuestion(int titleID, string questionNo, string question, string A, string B, string C, string D, string answer, string status) {
            return base.Channel.AddQuestion(titleID, questionNo, question, A, B, C, D, answer, status);
        }
        
        public System.Data.DataTable LoadDataQuestion() {
            return base.Channel.LoadDataQuestion();
        }
        
        public System.Data.DataTable LoadDataQuestionByParemeters(int titleID, string questionNo, string question, string status) {
            return base.Channel.LoadDataQuestionByParemeters(titleID, questionNo, question, status);
        }
        
        public bool UpdateQuestion(int questionID, int titleID, string question, string A, string B, string C, string D, string answer, string status) {
            return base.Channel.UpdateQuestion(questionID, titleID, question, A, B, C, D, answer, status);
        }
        
        public bool DeleteQuestion(string questionID) {
            return base.Channel.DeleteQuestion(questionID);
        }
        
        public string InsertCreateAccount(DOANCUOIKY.WCF.CreateAccount c) {
            return base.Channel.InsertCreateAccount(c);
        }
    }
}
